version: '3'

services:
  proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.1
    # Enables the web UI and tells Traefik to listen to docker
    command: 
#      - --api.insecure=true 
      - --providers.docker
      - --entrypoints.web.address=:80
      - --entrypoints.web-secure.address=:443
      - --providers.file.directory=/config/
      - --providers.file.watch=true
#      - --log.level=DEBUG
    ports:
      # The HTTP port
      - "80:80"
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
#      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ${TRAEFIK_CFG}:/config/
    labels:
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https" 
      - "traefik.http.routers.redirs.rule=hostregexp(`{host:.+}`)"  
      - "traefik.http.routers.redirs.entrypoints=web"  
      - "traefik.http.routers.redirs.middlewares=redirect-to-https"  
  static:
    image: nginx
    depends_on: 
      - django
    volumes:
      - static:/usr/share/nginx/html/static:ro
    labels:
      - "traefik.http.routers.coldfront-static.rule=PathPrefix(`/static/`)"
      - "traefik.http.routers.coldfront-static.tls=true"
  django:
    build: .
    depends_on: 
      - db
    labels:
      - "traefik.http.routers.django.rule=PathPrefix(`/`)"
      - "traefik.http.routers.django.tls=true"
      - "traefik.enable=true"
    command: /root/.local/bin/gunicorn -b 0.0.0.0:80 coldfront.config.wsgi
    volumes:
      - static:/usr/src/app/static_root
      - ${COLDFRONT_CFG}:/usr/src/app/coldfront/config
      - /root/coldfront_import/local_data:/usr/src/app/local_data
      - /root/coldfront_import/commands:/usr/src/app/coldfront/core/utils/management/commands
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: coldfront
      POSTGRES_PASSWORD: ${POSTGRES_PW}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes: 
      - ${POSTGRES_DBPATH}:/var/lib/postgresql/data
volumes:
  static:
